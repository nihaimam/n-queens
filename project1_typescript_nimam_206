Script started on Mon 02 Oct 2017 08:06:38 PM EDT
[?1034hbash-4.1$ date
Mon Oct  2 20:06:44 EDT 2017
bash-4.1$ i[Kuname -a
Linux Zeus-2 2.6.32-696.10.2.el6.centos.plus.x86_64 #1 SMP Tue Sep 12 23:39:53 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux
bash-4.1$ pwd
/home/nimam/CS262/project1_nimam_206
bash-4.1$ ls
Makefile  project1_nimam_206.c	project1_typescript_nimam_206
bash-4.1$ make project1_nimam_206
cc -lm -Wall -O2    project1_nimam_206.c   -o project1_nimam_206
bash-4.1$ ls
Makefile  project1_nimam_206  project1_nimam_206.c  project1_typescript_nimam_206
bash-4.1$ cat project1_nimam_206.c
#include<stdio.h>
#include<stdlib.h>
//#include<time.h>
#include<math.h>
//#include<limits.h>

#define max(a,b) \
({ __typeof__ (a) _a = (a); \
__typeof__ (b) _b = (b); \
_a > _b ? _a : _b; })

#define min(a,b) \
({ __typeof__ (a) _a = (a); \
__typeof__ (b) _b = (b); \
_a < _b ? _a : _b; })

#define seed 7092 //define seed for srandom

//functions declared
//void swap(int *a, int *b);
//void randPerm(int a[], int n);
//int checkBoard(int b[], int n);
//void displayBoard(int b[], int n);
//double recursionAlgorithm(double r);

void swap(int *a, int *b)
{
  //performs a swap
  int temp = *a;
  *a = *b;
  *b = temp;
}

void randPerm(int a[], int n)
{
  //generate random board using loop
  //shuffle the array
  int i, j; //index
  for (i = n - 1; i > 0; i--)
  {
    j = random() % (i+1); //create random number
    swap(&a[i], &a[j]); //swap random
  }
}

int checkBoard(int b[], int n)
{
  //check if queens are diagonal or in the same row
  int x, y; //first & second index
  for (x = 0; x < n; x++)
  {
    for(y = x + 1; y < n; y++)
    {
      if (abs(x-y) == abs(b[x]-b[y])) //if queens are diagonal
      {
        return 0; //distances are equal, diagonal queens
      }
    }
  }
  return 1; //the board is correct
}

void displayBoard(int b[], int n)
{
  //prints a solution of n-queens
  int i, p;
  for (i = 0; i < n; i++) //row
  {
    for (p = 0; p < n; p++) //column
        {
            if (i==b[p]) //if row == element
            {
                printf("* "); //print a star/queen
            }
            else
            {
                printf("- "); //print dash/no queen
            }
        }
        printf("\n");
    }
}

double recursionAlgorithm(double r)
{
  //factorial function for size! stat
  if (r == 1)
  {
     return 1;
  }
  else
  {
     //recursively call the function
     return r * recursionAlgorithm(r - 1);
  }
}

int main()
{
  //seed the random number generator
  srandom(seed);

  int n; //number of queens

  //arrays to collect statistics
  //for each n calculate
  int min[21]; //minimum
  int max[21]; //maximum
  double mean[21]; //mean
  double size_power[21]; //size**size
  double size_factorial[21]; //size!

  for (n = 4; n < 21; n++) //loop for ever n from 4 to 20
  {
    int arr[n]; //array of size n
    for (int k = 0; k < n; k++) //initialize/fill in array
    {
      arr[k] = k;
    }

    printf("\n\n\n%d QUEENS\n\n",n);

    int ctr = 0; //counter
    int i, o; //index
    for (i = 0; i < 10; i++)
    {
      int count = 1; //start count at one
      randPerm(arr,n); //randomize the board
      
      while(!checkBoard(arr,n)) //if randperm doesnt give right permutation
      {
        randPerm(arr,n); //randomize the board again
        count++; //keep increasing count by one
      }

      if (i == 0) //for the first found solution
      {
        min[n] = count; //track min
        max[n] = count; //track max
        displayBoard(arr,n); //display the board
        printf("\n");
      }

      //display the array for every solution
      printf("[ ");
      for (o = 0; o < n; o++)
      {
        printf("%d ", arr[o]);
      }
      printf("]");

      printf("\n"); 
      min[n] = min(min[n],count); //calcuate min
      max[n] = max(max[n], count); //calculte max
      ctr += count; //add count to ctr
    }

    //collect statistics
    mean[n] = ctr/10.0f; //find average by dividng by the number of times
    double size = pow(n,n); //size ** size
    size_power[n] = size; //store size in stats
    double sizeFactorial = recursionAlgorithm(n); //size factorial by recursion
    size_factorial[n] = sizeFactorial; //store factorial in stat
  }

  printf("\n%2s%10s%13s%13s%15s%12s\n", "size", "min", "max", "mean", "size**size", "size!"); //print header of stats
  int q;
  for (q = 4; q < 21; q++) //for every n print the stats
  {
    //for every n print the stats stored in the arrays
    printf("%2d%13d%13d%13.1e%13.1e%13.1e\n", q, min[q], max[q], mean[q], size_power[q], size_factorial[q]);
  }
}
bash-4.1$ ls
Makefile  project1_nimam_206  project1_nimam_206.c  project1_typescript_nimam_206
bash-4.1$ project11[K_nimam_206



4 QUEENS

- * - - 
- - - * 
* - - - 
- - * - 

[ 2 0 3 1 ]
[ 2 0 3 1 ]
[ 2 0 3 1 ]
[ 1 3 0 2 ]
[ 1 3 0 2 ]
[ 1 3 0 2 ]
[ 2 0 3 1 ]
[ 1 3 0 2 ]
[ 1 3 0 2 ]
[ 1 3 0 2 ]



5 QUEENS

- * - - - 
- - - * - 
* - - - - 
- - * - - 
- - - - * 

[ 2 0 3 1 4 ]
[ 3 0 2 4 1 ]
[ 1 3 0 2 4 ]
[ 1 4 2 0 3 ]
[ 0 3 1 4 2 ]
[ 0 3 1 4 2 ]
[ 3 0 2 4 1 ]
[ 1 3 0 2 4 ]
[ 0 2 4 1 3 ]
[ 3 1 4 2 0 ]



6 QUEENS

- * - - - - 
- - - * - - 
- - - - - * 
* - - - - - 
- - * - - - 
- - - - * - 

[ 3 0 4 1 5 2 ]
[ 1 3 5 0 2 4 ]
[ 1 3 5 0 2 4 ]
[ 2 5 1 4 0 3 ]
[ 3 0 4 1 5 2 ]
[ 2 5 1 4 0 3 ]
[ 4 2 0 5 3 1 ]
[ 4 2 0 5 3 1 ]
[ 3 0 4 1 5 2 ]
[ 2 5 1 4 0 3 ]



7 QUEENS

- - - - - * - 
- * - - - - - 
- - - - * - - 
* - - - - - - 
- - - * - - - 
- - - - - - * 
- - * - - - - 

[ 3 1 6 4 2 0 5 ]
[ 6 2 5 1 4 0 3 ]
[ 6 2 5 1 4 0 3 ]
[ 2 0 5 3 1 6 4 ]
[ 4 1 5 2 6 3 0 ]
[ 5 0 2 4 6 1 3 ]
[ 1 4 0 3 6 2 5 ]
[ 3 5 0 2 4 6 1 ]
[ 5 2 4 6 0 3 1 ]
[ 4 0 5 3 1 6 2 ]



8 QUEENS

- - * - - - - - 
- - - - - * - - 
- - - - - - - * 
* - - - - - - - 
- - - * - - - - 
- - - - - - * - 
- - - - * - - - 
- * - - - - - - 

[ 3 7 0 4 6 1 5 2 ]
[ 2 5 3 1 7 4 6 0 ]
[ 4 1 3 6 2 7 5 0 ]
[ 3 6 2 7 1 4 0 5 ]
[ 3 1 6 2 5 7 0 4 ]
[ 7 1 4 2 0 6 3 5 ]
[ 1 5 0 6 3 7 2 4 ]
[ 5 1 6 0 2 4 7 3 ]
[ 5 1 6 0 2 4 7 3 ]
[ 5 2 4 6 0 3 1 7 ]



9 QUEENS

- * - - - - - - - 
- - - - - * - - - 
- - - - - - - - * 
- - * - - - - - - 
- - - - * - - - - 
- - - - - - - * - 
- - - * - - - - - 
* - - - - - - - - 
- - - - - - * - - 

[ 7 0 3 6 4 1 8 5 2 ]
[ 6 0 3 1 7 5 8 2 4 ]
[ 7 0 3 6 4 1 8 5 2 ]
[ 3 5 7 2 0 6 4 1 8 ]
[ 2 6 3 1 8 4 0 7 5 ]
[ 1 3 7 2 8 5 0 4 6 ]
[ 8 5 2 0 7 4 1 3 6 ]
[ 3 6 0 7 4 1 8 2 5 ]
[ 0 5 8 4 1 7 2 6 3 ]
[ 6 8 3 1 4 7 5 0 2 ]



10 QUEENS

- * - - - - - - - - 
- - - * - - - - - - 
- - - - - - - * - - 
- - * - - - - - - - 
- - - - - - - - * - 
- - - - - * - - - - 
- - - - - - - - - * 
* - - - - - - - - - 
- - - - - - * - - - 
- - - - * - - - - - 

[ 7 0 3 1 9 5 8 2 4 6 ]
[ 4 1 7 9 6 3 0 8 5 2 ]
[ 4 6 8 3 1 7 9 2 0 5 ]
[ 5 3 1 7 4 8 0 2 9 6 ]
[ 5 8 6 0 3 1 9 7 2 4 ]
[ 2 5 1 9 0 8 4 7 3 6 ]
[ 0 3 8 6 9 2 5 1 4 7 ]
[ 3 0 7 9 1 5 2 8 6 4 ]
[ 9 3 5 2 8 1 4 7 0 6 ]
[ 5 2 6 9 7 1 3 0 8 4 ]



11 QUEENS

- - - - - - - - - * - 
- - - * - - - - - - - 
- - - - - - * - - - - 
- - - - - - - - - - * 
- - * - - - - - - - - 
* - - - - - - - - - - 
- - - - - * - - - - - 
- - - - - - - - * - - 
- - - - * - - - - - - 
- * - - - - - - - - - 
- - - - - - - * - - - 

[ 5 9 4 1 8 6 2 10 7 0 3 ]
[ 7 3 0 2 8 5 9 4 1 10 6 ]
[ 2 9 5 1 8 10 3 7 0 4 6 ]
[ 0 7 9 4 6 1 10 2 5 3 8 ]
[ 6 0 3 5 9 2 10 7 4 1 8 ]
[ 4 10 3 9 2 5 8 1 7 0 6 ]
[ 3 1 8 10 0 7 5 2 9 6 4 ]
[ 5 2 0 3 10 7 9 4 1 8 6 ]
[ 7 4 0 3 8 10 5 2 9 1 6 ]
[ 4 8 3 9 2 10 1 6 0 5 7 ]



12 QUEENS

- - - - - - - - - - - * 
- - - - - * - - - - - - 
- - - * - - - - - - - - 
* - - - - - - - - - - - 
- - - - * - - - - - - - 
- - - - - - - - - - * - 
- * - - - - - - - - - - 
- - - - - - - - - * - - 
- - - - - - * - - - - - 
- - - - - - - - * - - - 
- - * - - - - - - - - - 
- - - - - - - * - - - - 

[ 3 6 10 2 4 1 8 11 9 7 5 0 ]
[ 5 0 2 7 11 8 1 4 10 3 6 9 ]
[ 4 1 5 8 10 0 3 6 9 11 2 7 ]
[ 8 4 11 1 3 10 6 9 2 5 7 0 ]
[ 9 7 2 10 3 0 8 11 4 6 1 5 ]
[ 2 8 5 3 9 0 4 11 7 10 6 1 ]
[ 5 10 4 6 0 11 1 7 2 8 3 9 ]
[ 3 10 4 1 9 11 6 0 2 8 5 7 ]
[ 10 3 5 0 8 11 7 2 6 9 1 4 ]
[ 6 9 1 10 7 0 3 11 8 5 2 4 ]



13 QUEENS

- - - - - - - - * - - - - 
- - - - - - - - - - - * - 
- - - - - * - - - - - - - 
- - * - - - - - - - - - - 
* - - - - - - - - - - - - 
- - - - - - - - - * - - - 
- - - - - - - * - - - - - 
- - - - - - - - - - - - * 
- - - * - - - - - - - - - 
- * - - - - - - - - - - - 
- - - - - - - - - - * - - 
- - - - * - - - - - - - - 
- - - - - - * - - - - - - 

[ 4 9 3 8 11 2 12 6 0 5 10 1 7 ]
[ 2 8 1 12 10 0 7 4 11 3 6 9 5 ]
[ 10 3 6 12 7 4 11 0 8 5 2 9 1 ]
[ 7 10 3 1 6 11 0 12 4 8 5 2 9 ]
[ 5 11 2 0 12 9 4 1 7 10 3 6 8 ]
[ 10 2 0 5 7 12 6 11 1 4 9 3 8 ]
[ 0 7 3 6 9 12 1 5 10 2 4 8 11 ]
[ 8 10 0 6 1 7 11 3 12 9 5 2 4 ]
[ 1 7 9 0 2 5 8 10 12 3 6 4 11 ]
[ 7 10 2 11 6 1 9 5 12 0 3 8 4 ]



14 QUEENS

- - - - - - - - - - - - - * 
- - - - - - - * - - - - - - 
- - - - - - - - - * - - - - 
- - - - - - - - - - - - * - 
- - * - - - - - - - - - - - 
- - - - - * - - - - - - - - 
- * - - - - - - - - - - - - 
- - - - - - - - - - * - - - 
- - - - * - - - - - - - - - 
* - - - - - - - - - - - - - 
- - - - - - - - - - - * - - 
- - - - - - - - * - - - - - 
- - - - - - * - - - - - - - 
- - - * - - - - - - - - - - 

[ 9 6 4 13 8 5 12 1 11 2 7 10 3 0 ]
[ 2 7 12 4 13 10 6 11 5 1 9 0 8 3 ]
[ 7 2 11 5 12 10 0 13 4 8 1 3 9 6 ]
[ 3 11 9 5 1 10 7 13 2 0 8 6 4 12 ]
[ 11 4 7 9 13 2 0 6 10 1 5 12 8 3 ]
[ 11 6 4 12 5 3 10 7 2 8 13 1 9 0 ]
[ 7 13 4 9 12 3 5 11 1 10 0 6 8 2 ]
[ 7 5 13 9 0 6 8 2 11 1 3 10 12 4 ]
[ 3 11 13 2 10 6 4 12 1 9 7 5 8 0 ]
[ 5 3 8 13 11 4 1 7 9 12 2 0 10 6 ]



15 QUEENS

- - * - - - - - - - - - - - - 
- - - - - * - - - - - - - - - 
- - - - - - - * - - - - - - - 
- - - - - - - - - - - - - - * 
- - - - - - - - - - * - - - - 
- - - * - - - - - - - - - - - 
- - - - - - - - - - - - - * - 
- - - - - - - - * - - - - - - 
- - - - * - - - - - - - - - - 
- - - - - - - - - - - - * - - 
- * - - - - - - - - - - - - - 
- - - - - - - - - - - * - - - 
- - - - - - * - - - - - - - - 
* - - - - - - - - - - - - - - 
- - - - - - - - - * - - - - - 

[ 13 10 0 5 8 1 12 2 7 14 4 11 9 6 3 ]
[ 11 9 5 0 4 7 13 8 1 14 6 2 10 12 3 ]
[ 12 10 7 5 14 8 13 0 2 6 11 9 4 1 3 ]
[ 7 4 6 0 10 14 11 5 2 9 1 12 8 3 13 ]
[ 5 10 1 7 14 2 9 13 4 0 11 3 12 6 8 ]
[ 3 12 7 5 2 14 10 13 4 8 11 0 6 1 9 ]
[ 7 0 13 1 14 5 8 10 12 3 11 2 4 6 9 ]
[ 4 7 12 8 3 13 6 2 9 11 0 14 1 10 5 ]
[ 10 7 2 11 13 6 3 0 4 12 14 9 1 5 8 ]
[ 12 5 0 8 4 13 9 14 2 11 7 3 1 6 10 ]



16 QUEENS

- - - - - * - - - - - - - - - - 
- - - - - - - - - - - * - - - - 
- - - - - - - - - * - - - - - - 
- - - - - - - - - - - - * - - - 
- - - * - - - - - - - - - - - - 
- - - - - - - - * - - - - - - - 
- - * - - - - - - - - - - - - - 
- - - - - - - - - - - - - - - * 
- - - - - - - - - - * - - - - - 
* - - - - - - - - - - - - - - - 
- - - - - - - - - - - - - - * - 
- - - - - - * - - - - - - - - - 
- - - - * - - - - - - - - - - - 
- * - - - - - - - - - - - - - - 
- - - - - - - * - - - - - - - - 
- - - - - - - - - - - - - * - - 

[ 9 13 6 4 12 0 11 14 5 2 8 1 3 15 10 7 ]
[ 8 15 1 12 5 9 11 14 4 2 0 13 7 10 6 3 ]
[ 6 4 9 15 8 10 14 3 0 7 11 13 1 12 5 2 ]
[ 8 11 2 4 6 12 15 13 7 14 3 0 10 1 5 9 ]
[ 7 3 11 0 14 1 10 5 9 15 13 4 2 12 8 6 ]
[ 10 13 7 3 12 2 5 14 4 11 8 15 1 6 9 0 ]
[ 8 6 4 2 15 11 3 14 12 9 13 0 5 1 10 7 ]
[ 0 5 3 11 9 12 4 2 10 15 1 14 8 6 13 7 ]
[ 10 5 1 11 15 12 7 13 0 3 6 14 9 2 4 8 ]
[ 6 8 3 13 9 14 1 5 0 2 12 10 15 7 4 11 ]



17 QUEENS

- - - - * - - - - - - - - - - - - 
- - - - - - - - * - - - - - - - - 
- - - - - - - - - - - * - - - - - 
- - - - - - - - - - - - - * - - - 
- - * - - - - - - - - - - - - - - 
- - - - - - - - - - * - - - - - - 
- * - - - - - - - - - - - - - - - 
- - - - - - - * - - - - - - - - - 
- - - - - - - - - - - - - - - - * 
- - - * - - - - - - - - - - - - - 
- - - - - - - - - * - - - - - - - 
* - - - - - - - - - - - - - - - - 
- - - - - - - - - - - - - - * - - 
- - - - - * - - - - - - - - - - - 
- - - - - - - - - - - - - - - * - 
- - - - - - - - - - - - * - - - - 
- - - - - - * - - - - - - - - - - 

[ 11 6 4 9 0 13 16 7 1 10 5 2 15 3 12 14 8 ]
[ 8 4 12 15 9 5 3 0 14 16 11 1 7 2 6 13 10 ]
[ 11 8 3 5 9 15 6 0 16 1 13 10 7 2 4 12 14 ]
[ 6 13 10 8 5 3 16 0 7 12 14 2 4 15 9 11 1 ]
[ 10 7 14 1 15 8 3 11 13 5 2 0 12 4 9 16 6 ]
[ 5 12 2 7 11 15 0 16 14 8 6 13 9 1 4 10 3 ]
[ 7 14 10 6 1 3 11 16 2 5 12 0 4 8 13 15 9 ]
[ 2 14 9 0 3 11 6 10 16 4 8 15 13 1 5 7 12 ]
[ 3 6 14 10 4 0 15 11 1 8 16 9 13 2 5 7 12 ]
[ 9 14 1 10 0 2 6 11 13 15 12 5 7 16 3 8 4 ]



18 QUEENS

- - - - - * - - - - - - - - - - - - 
- - - - - - - - - - - - - * - - - - 
- - - - - - * - - - - - - - - - - - 
- - - - - - - - - - - - * - - - - - 
- - - * - - - - - - - - - - - - - - 
- * - - - - - - - - - - - - - - - - 
- - - - - - - - - - - - - - * - - - 
- - * - - - - - - - - - - - - - - - 
- - - - - - - - * - - - - - - - - - 
- - - - - - - - - - - - - - - * - - 
- - - - - - - * - - - - - - - - - - 
* - - - - - - - - - - - - - - - - - 
- - - - - - - - - - * - - - - - - - 
- - - - - - - - - - - - - - - - * - 
- - - - * - - - - - - - - - - - - - 
- - - - - - - - - - - - - - - - - * 
- - - - - - - - - * - - - - - - - - 
- - - - - - - - - - - * - - - - - - 

[ 11 5 7 4 14 0 2 10 8 16 12 17 3 1 6 9 13 15 ]
[ 4 8 11 14 10 17 5 1 16 6 2 9 15 13 7 3 0 12 ]
[ 2 12 15 8 5 17 10 1 4 6 0 14 7 11 13 3 16 9 ]
[ 9 6 14 10 1 16 0 7 11 15 2 4 8 12 3 13 17 5 ]
[ 16 4 0 12 8 5 7 14 10 2 15 17 11 1 3 9 6 13 ]
[ 5 13 4 1 14 12 10 0 17 3 16 11 8 2 9 6 15 7 ]
[ 7 14 4 6 1 13 15 12 2 8 10 3 16 0 9 11 17 5 ]
[ 6 11 3 16 13 8 5 14 2 0 15 7 12 17 9 1 4 10 ]
[ 17 4 14 5 9 15 12 8 2 13 1 3 0 11 7 10 16 6 ]
[ 8 16 11 4 2 10 17 13 3 0 9 15 6 1 14 12 5 7 ]



19 QUEENS

- - - - - - - * - - - - - - - - - - - 
- - - - - - - - - - - - - - * - - - - 
- - - - - - - - - - * - - - - - - - - 
- - - - - - - - - - - - - - - - - * - 
- - - - - * - - - - - - - - - - - - - 
- - - * - - - - - - - - - - - - - - - 
- - - - - - - - - - - - - - - - * - - 
- - - - - - - - - - - - * - - - - - - 
- - - - - - - - * - - - - - - - - - - 
- - - - * - - - - - - - - - - - - - - 
* - - - - - - - - - - - - - - - - - - 
- - - - - - - - - - - - - - - * - - - 
- - - - - - - - - * - - - - - - - - - 
- * - - - - - - - - - - - - - - - - - 
- - - - - - - - - - - - - * - - - - - 
- - * - - - - - - - - - - - - - - - - 
- - - - - - - - - - - - - - - - - - * 
- - - - - - * - - - - - - - - - - - - 
- - - - - - - - - - - * - - - - - - - 

[ 10 13 15 5 9 4 17 0 8 12 2 18 7 14 1 11 6 3 16 ]
[ 13 2 4 6 12 15 18 1 17 8 0 16 7 10 14 3 5 9 11 ]
[ 12 9 18 5 7 1 16 2 13 10 17 15 4 0 3 8 14 11 6 ]
[ 2 14 12 6 9 13 15 0 4 1 17 8 16 11 3 10 7 5 18 ]
[ 6 12 2 7 11 13 18 0 9 14 1 8 4 15 17 5 10 16 3 ]
[ 5 10 15 4 12 16 3 1 7 11 14 18 0 13 17 8 6 2 9 ]
[ 10 5 14 4 11 3 17 6 16 0 15 7 9 13 8 2 18 12 1 ]
[ 10 7 2 11 16 8 13 5 1 6 12 0 4 17 9 3 15 18 14 ]
[ 11 15 7 2 14 5 0 10 6 16 3 13 18 8 1 12 17 9 4 ]
[ 10 12 15 3 1 6 9 2 0 16 8 17 14 18 13 4 7 5 11 ]



20 QUEENS

- - - - - - - - - - - - - - - * - - - - 
- - - - * - - - - - - - - - - - - - - - 
* - - - - - - - - - - - - - - - - - - - 
- - - - - - - * - - - - - - - - - - - - 
- - - - - - - - - - - - - * - - - - - - 
- - - - - - - - - - - - - - - - - - - * 
- * - - - - - - - - - - - - - - - - - - 
- - - - - - - - - - - - * - - - - - - - 
- - - - - - - - - - - - - - - - - - * - 
- - - - - - - - - - - * - - - - - - - - 
- - * - - - - - - - - - - - - - - - - - 
- - - - - - - - - - * - - - - - - - - - 
- - - - - - * - - - - - - - - - - - - - 
- - - * - - - - - - - - - - - - - - - - 
- - - - - - - - - - - - - - * - - - - - 
- - - - - - - - * - - - - - - - - - - - 
- - - - - - - - - - - - - - - - - * - - 
- - - - - * - - - - - - - - - - - - - - 
- - - - - - - - - * - - - - - - - - - - 
- - - - - - - - - - - - - - - - * - - - 

[ 2 6 10 13 1 17 12 3 15 18 11 9 7 4 14 0 19 16 8 5 ]
[ 0 16 12 4 18 11 2 5 7 1 14 19 9 15 17 10 3 6 8 13 ]
[ 13 17 2 7 3 6 0 10 15 19 16 9 4 18 1 12 5 8 11 14 ]
[ 5 11 9 15 13 18 3 1 8 17 0 4 10 16 6 19 12 2 7 14 ]
[ 8 4 9 13 5 17 12 18 6 3 0 10 7 15 19 2 16 14 11 1 ]
[ 12 15 0 11 9 5 2 18 7 10 14 17 19 8 16 3 13 6 4 1 ]
[ 17 5 7 1 14 0 18 13 4 12 9 3 19 2 16 8 6 11 15 10 ]
[ 13 0 14 3 10 16 2 8 12 17 1 18 6 15 19 4 9 7 5 11 ]
[ 12 18 6 13 2 4 14 16 10 5 3 0 15 8 11 9 1 17 19 7 ]
[ 9 11 2 16 1 13 18 6 19 7 0 14 8 4 15 17 10 5 3 12 ]

size       min          max         mean     size**size       size!
 4            1           39      1.4e+01      2.6e+02      2.4e+01
 5            3           20      1.1e+01      3.1e+03      1.2e+02
 6           14          341      1.3e+02      4.7e+04      7.2e+02
 7            3          438      1.5e+02      8.2e+05      5.0e+03
 8           18          812      4.1e+02      1.7e+07      4.0e+04
 9           92         5996      1.1e+03      3.9e+08      3.6e+05
10          379         8471      4.0e+03      1.0e+10      3.6e+06
11         1062        81725      1.8e+04      2.9e+11      4.0e+07
12         3900        50772      2.1e+04      8.9e+12      4.8e+08
13         8184       310260      9.3e+04      3.0e+14      6.2e+09
14        40314       759509      2.8e+05      1.1e+16      8.7e+10
15       319697      1462464      6.9e+05      4.4e+17      1.3e+12
16        93634      3763237      1.6e+06      1.8e+19      2.1e+13
17       186275     12034738      4.2e+06      8.3e+20      3.6e+14
18      1007455     26113264      7.6e+06      3.9e+22      6.4e+15
19      1434242     95820111      3.1e+07      2.0e+24      1.2e+17
20      1712567    114379693      3.7e+07      1.0e+26      2.4e+18
bash-4.1$ ls
Makefile  project1_nimam_206  project1_nimam_206.c  project1_typescript_nimam_206
bash-4.1$ rm project1_nimam_206
bash-4.1$ ls
Makefile  project1_nimam_206.c	project1_typescript_nimam_206
bash-4.1$ exit

Script done on Mon 02 Oct 2017 08:15:42 PM EDT
